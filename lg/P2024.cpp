#include <iostream>
#include <ranges>
#include <vector>
#define sv std::ranges::views::

using namespace std;
using tp = long long int;

class icecream {
  vector<tp> f;

 public:
  icecream() = default;
  icecream(tp n) {
    f.resize(n + 1);
    for (tp i = 1; i <= n; ++i) {
      f[i] = i;
    }
  }

  tp find(tp x) { return f[x] == x ? x : f[x] = find(f[x]); }

  void merge(tp u, tp v) { f[find(v)] = find(u); }

  bool same(tp x, tp y) { return find(x) == find(y); }
};

signed main() {
  tp n, k, tar = 0;
  scanf("%lld%lld", &n, &k);
  icecream c(n * 3);
  while (k--) {
    tp t, x, y;
    scanf("%lld%lld%lld", &t, &x, &y);
    if (x > n || y > n) {
      ++tar;
      continue;
    }
    if (t == 1) {
      if (c.same(x, y + n) || c.same(x + n, y)) {
        ++tar;
      } else {
        c.merge(x, y);
        c.merge(x + n, y + n);
        c.merge(x + 2 * n, y + 2 * n);
      }
    } else {
      if (c.same(x, y) || c.same(x, y + n)) {
        ++tar;
      } else {
        c.merge(x, y + 2 * n);
        c.merge(x + n, y);
        c.merge(x + 2 * n, y + n);
      }
    }
  }
  printf("%lld
", tar);
  return EXIT_SUCCESS;
}

struct __Initer_t__ {
  __Initer_t__() {
    ios_base::sync_with_stdio(0);
    cin.tie(nullptr);
    cout.tie(nullptr);
  }
} __Initer__;

/*#################################################################
#.................................................................#
#............................This.Code.Was.Created.By.RBTree......#
#.............#......#...............Limiting-Factor..............#
#............#.#....#.#.................Soul-Code.................#
#.............########............................................#
#............#........#..##############################...........#
#...........#..V....V......#..#........................#..#...#...#
#............#........#....#..........###..###..........#..#.#.#..#
#............#..X##X..#..#............#....#.#...........#..#...#.#
#...........#...N##N...#..#...........###..###..........#.........#
#.......MOE..#..@.....#....#.#.#.#...................#.#..........#
#.............########.....#.#.#.##############.#.#..#.#..........#
#..........................#.#.#.#.............#.#.#.#.#..........#
#......#########...........#.#.#.#.................#.#.#..........#
#.....#.........#..........#.#.#.#.................#.#.#..........#
#.#.#.#G#R#A#S#S#.#.#......#.#.#.#.................#.#.#..........#
#.###################......#.#.#.#.................#.#.#..........#
#...........................#.#.#...................#.#...........#
#.................................................................#
#################################################################*/